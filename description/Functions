-------------------------------------------------------------------------------------------------
const a = funtion(){
    return ~~;
}
이렇게 변수를 활용 해 함수의 이름을 지정하지 않을 수 있다
-------------------------------------------------------------------------------------------------
(item) => item + "❤"
    implicit return한다
(item) => {item + "❤"} (x)
    implicit return(한줄에 입력되어 있으면 return)이 사라지니 주의
    함수가 길어져서 다른 것들을 추가하게 되면
    {}를 써주고 return을 쓴다
        단 오브젝트의 경우 {}를 ()로 감싸주면 return하라는 것을 의미
argument가 하나일 경우는 ()를 생략해줘도 된다
argument가 없을 때는 () => ~~형식으로 작성
-------------------------------------------------------------------------------------------------
# this
    arrow function안에 있는 this는 window를 참조한다
        즉, 바깥의 bubble을 참조한다
        this를 이벤트로부터 가지고 있지 않는다
    function안에 있는 this는 부모 변수를 가르킨다
-------------------------------------------------------------------------------------------------
# .find 메소드
    주어진 판별 함수를 만족하는 첫 번째 요소의 값을 반환. 그런 요소가 없다면 undefined를 반환
-------------------------------------------------------------------------------------------------
# .filter 메소드
    제공된 함수의 조건을 만족(true)한 모든 엘리먼트로 새로운 array를 만든다
-------------------------------------------------------------------------------------------------
# .includes()
    string을 찾아서 boolean를 반환
-------------------------------------------------------------------------------------------------
# .forEach()
    각 array의 엘리먼드 마다 제공된 함수를 실행
-------------------------------------------------------------------------------------------------
# .map()
    forEach지만 반환된 element들로 새로운 array를 만들어준다
    map function의 두번째 argument는 index로 현재 item이 몇 번째인지 나타낸다
-------------------------------------------------------------------------------------------------
# Default Values
    함수에서 받을 arg에 default값(뭐든 가능)을 줘서 호출 할 때 arg를 보내주지 않으면 디폴드 값을 받음
-------------------------------------------------------------------------------------------------